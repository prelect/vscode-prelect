{
	"name": "PRELECT",
	"version": "1.0.0",
	"uuid": "8e5f0ad4-618f-4933-a92c-ee58d06c633e",
	"scopeName": "source.prelect",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#keyword"
		},
		{
			"include": "#number"
		},
		{
			"include": "#identifier"
		},
		{
			"include": "#type"
		},
		{
			"include": "#string"
		}
	],
	"repository": {
		"comment": {
			"patterns": [
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.prelect"
						}
					},
					"end": "\\*/",
					"name": "comment.block.prelect"
				},
				{
					"match": "(//).*$\\n?",
					"name": "comment.line.prelect"
				}
			]
		},
		"keyword": {
			"patterns": [
				{
					"match": "(?<=^|\\s)<-($|\\s|\\)|\\})",
					"name": "keyword.control.prelect"
				},
				{
					"match": "(?<=^|\\s)!!?($|\\s|\\)|\\})",
					"name": "keyword.control.prelect"
				},
				{
					"match": "(?<=^|\\s)\\@{2,3}($|\\s|\\)|\\})",
					"name": "keyword.control.prelect"
				},
				{
					"match": "\\*{1,3}(?=:)",
					"name": "keyword.control.prelect"
				}
			]
		},
		"number": {
			"patterns": [
				{
					"match": "(?<=[\\s\\{\\}\\(\\)\\>\\<\\[\\]])-?([1-9]\\d*|0)(\\.\\d+)?(?!\\.)\\b",
					"name": "constant.numeric.decimal.prelect"
				},
				{
					"match": "(?<=[\\s\\{\\}\\(\\)\\>\\<\\[\\]])-?[1-9]\\d*[eE][\\-\\+]?[1-9]\\d*(\\.\\d+)?(?!\\.)\\b",
					"name": "constant.numeric.decimal.prelect"
				},
				{
					"match": "(?<=[\\s\\{\\}\\(\\)\\>\\<\\[\\]])-?([1-9]\\d*|0)\\.[1-9]\\d*[eE][\\+\\-]?[1-9]\\d*(?!\\.)\\b",
					"name": "constant.numeric.decimal.prelect"
				},
				{
					"match": "(?<=[\\s\\{\\}\\(\\)\\>\\<\\[\\]])-?0[xX]([1-9a-fA-F][0-9a-f-A-F]*|0)(?!\\.)\\b",
					"name": "constant.numeric.hexadecimal.prelect"
				},
				{
					"match": "(?<=[\\s\\{\\}\\(\\)\\>\\<\\[\\]])-?0([1-9a-fA-F][0-9a-f-A-F]*|0)(?!\\.)\\b",
					"name": "constant.numeric.octal.prelect"
				}
			]
		},
		"identifier": {
			"patterns": [
				{
					"match": "(?<=\\b)[^0-9*:][^*:]*:",
					"name": "variable.assign.prelect"
				},
				{
					"match": "(?<=^|\\s|\\(|\\)|\\{|\\})(?!\\@|\\d)([^\\s\\{\\}\\)\\(\\[\\]\\.\\@:`])+(?=\\()",
					"name": "variable.formulaCall.prelect"
				},
				{
					"match": "(?<=^|\\s|\\(|\\)|\\{|\\})(?!\\@|\\d)([^\\s\\{\\}\\)\\(\\[\\]\\.\\@:`])+(?=\\b)",
					"name": "variable.identifier.prelect"
				}
			]
		},
		"type": {
			"patterns": [
				{
					"match": "(?<=\\.|\\(|\\)|\\{|}|\\s|^)\\@([^\\d\\{\\}\\)\\(\\<\\>\\.\\@\\$\\/*#!:`])([^\\{}\\)\\(\\<\\>\\.\\@\\$\\/*#!:`])*(?=\\.|\\(|\\)|\\{|}|\\s|:|$)",
					"name": "support.type.prelect"
				},
				{
					"match": "(^|\\s)&(\\.|$|\\s|\\)|\\})",
					"name": "support.type.prelect"
				},
				{
					"match": "(^|\\s)##?(\\.|$|\\s|\\)|\\})",
					"name": "support.type.prelect"
				},
				{
					"match": "(^|\\s)\\$(\\.|$|\\s|\\)|\\})",
					"name": "support.type.prelect"
				}
			]
		},
		"string": {
			"name": "string.prelect",
			"begin": "`",
			"end": "`",
			"patterns": [
				{
					"name": "constant.character.escape.prelect",
					"match": "\\\\."
				},
				{
					"name": "punctuation.term.prelect",
					"begin": "\\{",
					"beginCaptures": {
						"0": {
						"name": "meta.brace.curly.prelect"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
						"name": "meta.brace.curly.prelect"
						}
					},
					"patterns": [
						{ "include": "#identifier" }
					]
				}
			]
		}
	}
}